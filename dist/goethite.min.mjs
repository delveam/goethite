function t(t,...e){return t.replace(/\{(\d+)\}/g,((t,r)=>void 0!==e[r]?e[r]:t))}function e(e,...r){console.log(t(e,...r))}function r(t,e){if(!t)throw new TypeError(null!=e?e:"Assertion failed.")}function s(t,e,r,s){if("a"===r&&!s)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!s:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?s:"a"===r?s.call(t):s?s.value:e.get(t)}function n(t,e,r,s,n){if("m"===s)throw new TypeError("Private method is not writable");if("a"===s&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!n:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?n.call(t,r):n?n.value=r:e.set(t,r),r}var i,a,h,c;class o{constructor(t,e){i.set(this,void 0),a.set(this,void 0),n(this,i,t,"f"),n(this,a,e,"f")}isSome(){return 0==s(this,i,"f")}isNone(){return 1==s(this,i,"f")}expect(t){switch(s(this,i,"f")){case 0:return s(this,a,"f");case 1:throw new TypeError(t)}}unwrap(){switch(s(this,i,"f")){case 0:return s(this,a,"f");case 1:throw new TypeError("Attempted to unwrap 'None' value.")}}unwrapOr(t){switch(s(this,i,"f")){case 0:return s(this,a,"f");case 1:return t}}unwrapOrElse(t){switch(s(this,i,"f")){case 0:return s(this,a,"f");case 1:return t()}}map(t){switch(s(this,i,"f")){case 0:return o.some(t(s(this,a,"f")));case 1:return o.none()}}mapOr(t,e){switch(s(this,i,"f")){case 0:return e(s(this,a,"f"));case 1:return t}}mapOrElse(t,e){switch(s(this,i,"f")){case 0:return e(s(this,a,"f"));case 1:return t()}}andThen(t){switch(s(this,i,"f")){case 0:return t(s(this,a,"f"));case 1:return o.none()}}filter(t){switch(s(this,i,"f")){case 0:return t(s(this,a,"f"))?o.some(s(this,a,"f")):o.none();case 1:return o.none()}}eq(t){return s(this,i,"f")===s(t,i,"f")&&s(this,a,"f")===s(t,a,"f")}toString(){switch(s(this,i,"f")){case 0:return`Some(${JSON.stringify(s(this,a,"f"))})`;case 1:return"None"}}static some(t){if(null==t)throw new TypeError("An Option cannot contain a 'null' or 'undefiend' value; use 'Option.none()' to represent an empty value instead.");return new o(0,t)}static none(){return new o(1,null)}}function f(t){return o.some(t)}function u(){return o.none()}i=new WeakMap,a=new WeakMap;class w{constructor(t,e){h.set(this,void 0),c.set(this,void 0),n(this,h,t,"f"),n(this,c,e,"f")}isOk(){return 0===s(this,h,"f")}isErr(){return 1===s(this,h,"f")}expect(t){switch(s(this,h,"f")){case 0:return s(this,c,"f");case 1:throw new TypeError(`${t}`)}}expectErr(t){switch(s(this,h,"f")){case 0:throw new TypeError(`${t}`);case 1:return s(this,c,"f")}}unwrap(){switch(s(this,h,"f")){case 0:return s(this,c,"f");case 1:throw new TypeError("Attempted to call `unwrap` on an `Err` value.")}}unwrapErr(){switch(s(this,h,"f")){case 0:throw new TypeError("Attempted to call `unwrapErr` on an `Ok` value.");case 1:return s(this,c,"f")}}unwrapOr(t){switch(s(this,h,"f")){case 0:return s(this,c,"f");case 1:return t}}unwrapOrElse(t){switch(s(this,h,"f")){case 0:return s(this,c,"f");case 1:return t()}}map(t){switch(s(this,h,"f")){case 0:return w.ok(t(s(this,c,"f")));case 1:return w.err(s(this,c,"f"))}}mapOr(t,e){switch(s(this,h,"f")){case 0:return e(s(this,c,"f"));case 1:return t}}mapOrElse(t,e){switch(s(this,h,"f")){case 0:return e(s(this,c,"f"));case 1:return t(s(this,c,"f"))}}andThen(t){switch(s(this,h,"f")){case 0:return t(s(this,c,"f"));case 1:return w.err(s(this,c,"f"))}}eq(t){return s(this,h,"f")===s(t,h,"f")&&s(this,c,"f")===s(t,c,"f")}toString(){switch(s(this,h,"f")){case 0:return`Ok(${JSON.stringify(s(this,c,"f"))})`;case 1:return`Err(${JSON.stringify(s(this,c,"f"))})`}}static ok(t){return new w(0,t)}static err(t){return new w(1,t)}}function p(t){return w.ok(t)}function l(t){return w.err(t)}h=new WeakMap,c=new WeakMap;export{o as Option,w as Result,r as assert,l as err,t as format,u as none,p as ok,e as println,f as some};
